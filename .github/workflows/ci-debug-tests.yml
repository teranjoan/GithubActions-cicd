name: CI

on:
  push:
    branches: [ master ]
# Pull Request: Cuando creas o actualizas un pull request cuyo destino es master. Esto permite validar los cambios antes de integrarlos.
  pull_request:
    branches: [ master ]
# Manual: Desde la pestaña Actions en GitHub, usando el botón "Run workflow" gracias a 'workflow_dispatch'.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        NODE_ENV: "production"
        API_URL: "https://api.midominio.com"
    steps:
        - name: Debug - Inicio workflow
          run: |
            echo "[DEBUG] Iniciando workflow CI-debug-tests"
            echo "Fecha: $(date)"
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'
        - name: Debug - Node.js version
          run: |
            echo "[DEBUG] Node.js version instalada: $(node -v)"
        - name: Mostrar variable de entorno
          run: |
            echo "NODE_ENV: $NODE_ENV"
            echo "API_URL: $API_URL"
            echo "[DEBUG] Variables de entorno actuales:"
            printenv | grep -E 'NODE_ENV|API_URL|SOLO_PASO'
        - name: Instalar dependencias
          run: |
            cd react-app
            npm install
        - name: Debug - Dependencias instaladas
          run: |
            cd react-app
            echo "[DEBUG] Dependencias instaladas:"
            npm list --depth=0
        - name: Usar variable solo en este paso
          env:
            SOLO_PASO: "valor-unico"
          run: echo "Variable SOLO_PASO $SOLO_PASO"
        - name: Debug - Variable SOLO_PASO
          run: echo "[DEBUG] SOLO_PASO: $SOLO_PASO"
        - name: Usar un secreto (debes crearlo en GitHub como MI_SECRETO)
          run: |
            echo "Token de acceso: ${{ secrets.ACCESS_TOKEN }}"
            echo "Clave API: ${{ secrets.API_KEY }}"
        - name: Debug - Secretos disponibles
          run: |
            echo "[DEBUG] ¿Secreto ACCESS_TOKEN presente?"
            if [ -z "${{ secrets.ACCESS_TOKEN }}" ]; then echo "No definido"; else echo "Definido"; fi
            echo "[DEBUG] ¿Secreto API_KEY presente?"
            if [ -z "${{ secrets.API_KEY }}" ]; then echo "No definido"; else echo "Definido"; fi
        - name: Run tests
          run: |
            cd react-app
            npm test -- --watchAll=false
        - name: Debug - Estado de tests
          run: echo "[DEBUG] Última salida de tests arriba. Revisa logs para detalles."
        - name: Build app
          run: |
            cd react-app
            npm run build
        - name: Debug - Build finalizado
          run: echo "[DEBUG] Build finalizado. Archivos generados en react-app/build"
  fake_deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
        - name: Fake deploy step
          run: echo "Desplegando la app... (fake)"
        - name: Debug - Fin workflow
          run: echo "[DEBUG] Workflow CI-debug-tests finalizado."
