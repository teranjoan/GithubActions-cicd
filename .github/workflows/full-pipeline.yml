name: Full Pipeline

on:
  workflow_call:
    inputs:
      environment:
        description: "Entorno de despliegue (dev, prd, stg, tst)"
        required: true
        type: string
        default: "dev"
    # secrets:
    #   dockerhub_user:
    #     required: true
    #   dockerhub_password:
    #     required: true

jobs:
  # === DEMO: Passing variables between jobs ===
  build_save_name:
    runs-on: ubuntu-latest
    outputs:
      # Define outputs that other jobs can use
      generated_name: ${{ steps.generate.outputs.name }}
      build_time: ${{ steps.generate.outputs.time }}
      build_number: ${{ steps.generate.outputs.number }}
    steps:
      - name: Generate variables
        id: generate
        run: |
          # Generate some variables
          NAME="MyApp-$(date +%Y%m%d)"
          TIME=$(date +"%Y-%m-%d %H:%M:%S")
          NUMBER=$((RANDOM % 1000))
          
          echo "ðŸ”§ Generated variables:"
          echo "  NAME: $NAME"
          echo "  TIME: $TIME"
          echo "  NUMBER: $NUMBER"
          
          # Set outputs for other jobs to use
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "time=$TIME" >> $GITHUB_OUTPUT
          echo "number=$NUMBER" >> $GITHUB_OUTPUT
          
          echo "âœ… Variables saved as job outputs"

  build_load_name:
    runs-on: ubuntu-latest
    needs: build_save_name  # This job depends on build_save_name
    steps:
      - name: Load and use variables from previous job
        run: |
          echo "ðŸ“¥ Loading variables from previous job:"
          echo "  Generated Name: ${{ needs.build_save_name.outputs.generated_name }}"
          echo "  Build Time: ${{ needs.build_save_name.outputs.build_time }}"
          echo "  Build Number: ${{ needs.build_save_name.outputs.build_number }}"
          
          # You can also assign them to environment variables
          APP_NAME="${{ needs.build_save_name.outputs.generated_name }}"
          BUILD_TIME="${{ needs.build_save_name.outputs.build_time }}"
          BUILD_NUM="${{ needs.build_save_name.outputs.build_number }}"
          
          echo ""
          echo "ðŸŽ¯ Using variables in this job:"
          echo "  Processing app: $APP_NAME"
          echo "  Built at: $BUILD_TIME"
          echo "  Build #: $BUILD_NUM"
          
          # Example: Use in a conditional
          if [ "$BUILD_NUM" -gt 500 ]; then
            echo "ðŸš€ High build number detected!"
          else
            echo "ðŸ“¦ Standard build number"
          fi

  # === END DEMO ===

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Build React App
  #       uses: teranjoan/GithubActions/.github/actions/build-react@master

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   continue-on-error: true
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Test React App
  #       uses: teranjoan/GithubActions/.github/actions/test-react@master

  # docker:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Docker Build & Push
  #       uses: teranjoan/GithubActions/.github/actions/docker-build-push@master
  #       with:
  #         dockerhub_user: ${{ secrets.dockerhub_user }}
  #         dockerhub_password: ${{ secrets.dockerhub_password }}
  # deploy:
  #   runs-on: ubuntu-latest
  #   environment: ${{ inputs.environment }}
  #   # needs: docker
  #   steps:
  #     - name: "Prepare env file for ${{ inputs.environment }}"
  #       uses: teranjoan/GithubActions-cicd/.github/actions/prepare-env-file@master
  #       with:
  #         environment: ${{ inputs.environment }}
  #       env:
  #         # Pass secrets as environment variables to the action in KEY=VALUE format
  #         ALL_SECRETS: |
  #           MY_ENV_SECRET_1=${{ secrets.MY_ENV_SECRET_1 }}
  #           MY_ENV_SECRET_2=${{ secrets.MY_ENV_SECRET_2 }}
  #           MY_REPO_SECRET_1=${{ secrets.MY_REPO_SECRET_1 }}
  #           MY_REPO_SECRET_2=${{ secrets.MY_REPO_SECRET_2 }}
  #         ENV_VARIABLES: |
  #           # 
  #           MY_ENV_VAR_1=${{ vars.MY_ENV_VAR_1 }}
  #           MY_ENV_VAR_2=${{ vars.MY_ENV_VAR_2 }}

  #           MY_REPO_VAR_1=${{ vars.MY_REPO_VAR_1 }}
  #           MY_REPO_VAR_2=${{ vars.MY_REPO_VAR_2 }}

